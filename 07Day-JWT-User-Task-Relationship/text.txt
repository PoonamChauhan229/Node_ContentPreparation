User Task Relationship:
Create a relationship between a user and the tasks that they've created.

This is going to be important to make sure that users can only access and manage their tasks and that they can't mess with someone else's.

We will be working in 3 files.
1-userModel.js
2-TaskModel.js
3-Index.js
4-TaskRouter.js


TaskModel.js

2ways we can set up the relationship between the user and task.
1- The user should store te individual Task ID
2-individual task should store the Id of the user who created.

2nd Approcah we will follow.
for that, we will set up an another field in TaskModel.js
owner:{
        type:mongoose.Schema.Types.ObjectId,
        required:true
}

Next go to TaskRouters
Load in the middleware.

And once we get the owner details.

we're going to use that to make sure that someone can actually read a given task that they can update a given task and that they can delete a given task.
If I'm trying to delete a task I need to be able to confirm on the server that I'm the one who created it

Lets go to
index.js



Now, We have taken a task and find out the user
Now, lets do the otherway:
Lets have a user and find out the thier task.


Now, the last is what if the user profile get deleted then the task associated with it should also get delete.






















task router to add authentication to those final four task related end points.

Route Fetch Task By ID:
user to be able to fetch a task by I.D.
=>Going to make sure they're authenticated.
=>task they're trying to fetch was a task they actually created to get started as you probably expected.

user loginned=> created the particular task.

simply going to add to the off middleware
to change how we're fetching the task down below



